// Generated by view binder compiler. Do not edit!
package com.example.interfaces_pr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.interfaces_pr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton buttonHome;

  @NonNull
  public final ImageButton buttonNoti;

  @NonNull
  public final ImageButton buttonPerfil;

  @NonNull
  public final ImageButton buttonPubli;

  @NonNull
  public final FrameLayout fragmentContainer;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull ImageButton buttonHome,
      @NonNull ImageButton buttonNoti, @NonNull ImageButton buttonPerfil,
      @NonNull ImageButton buttonPubli, @NonNull FrameLayout fragmentContainer) {
    this.rootView = rootView;
    this.buttonHome = buttonHome;
    this.buttonNoti = buttonNoti;
    this.buttonPerfil = buttonPerfil;
    this.buttonPubli = buttonPubli;
    this.fragmentContainer = fragmentContainer;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_home;
      ImageButton buttonHome = ViewBindings.findChildViewById(rootView, id);
      if (buttonHome == null) {
        break missingId;
      }

      id = R.id.button_noti;
      ImageButton buttonNoti = ViewBindings.findChildViewById(rootView, id);
      if (buttonNoti == null) {
        break missingId;
      }

      id = R.id.button_perfil;
      ImageButton buttonPerfil = ViewBindings.findChildViewById(rootView, id);
      if (buttonPerfil == null) {
        break missingId;
      }

      id = R.id.button_publi;
      ImageButton buttonPubli = ViewBindings.findChildViewById(rootView, id);
      if (buttonPubli == null) {
        break missingId;
      }

      id = R.id.fragment_container;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, buttonHome, buttonNoti, buttonPerfil,
          buttonPubli, fragmentContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
