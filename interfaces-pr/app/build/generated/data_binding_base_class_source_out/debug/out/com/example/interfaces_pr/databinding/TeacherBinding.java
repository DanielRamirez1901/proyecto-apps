// Generated by view binder compiler. Do not edit!
package com.example.interfaces_pr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.interfaces_pr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TeacherBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ImageView imageBack;

  @NonNull
  public final ImageView imageView19;

  @NonNull
  public final TextView teacherDescTxt;

  @NonNull
  public final TextView teacherNameTxt;

  @NonNull
  public final ImageView userProfile;

  private TeacherBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull ImageView imageBack, @NonNull ImageView imageView19,
      @NonNull TextView teacherDescTxt, @NonNull TextView teacherNameTxt,
      @NonNull ImageView userProfile) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.imageBack = imageBack;
    this.imageView19 = imageView19;
    this.teacherDescTxt = teacherDescTxt;
    this.teacherNameTxt = teacherNameTxt;
    this.userProfile = userProfile;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TeacherBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TeacherBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.teacher, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TeacherBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.image_back;
      ImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.imageView19;
      ImageView imageView19 = ViewBindings.findChildViewById(rootView, id);
      if (imageView19 == null) {
        break missingId;
      }

      id = R.id.teacher_descTxt;
      TextView teacherDescTxt = ViewBindings.findChildViewById(rootView, id);
      if (teacherDescTxt == null) {
        break missingId;
      }

      id = R.id.teacher_nameTxt;
      TextView teacherNameTxt = ViewBindings.findChildViewById(rootView, id);
      if (teacherNameTxt == null) {
        break missingId;
      }

      id = R.id.user_profile;
      ImageView userProfile = ViewBindings.findChildViewById(rootView, id);
      if (userProfile == null) {
        break missingId;
      }

      return new TeacherBinding((ConstraintLayout) rootView, cardView, imageBack, imageView19,
          teacherDescTxt, teacherNameTxt, userProfile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
